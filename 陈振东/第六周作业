#K-MEANS
import cv2
import numpy as np
import matplotlib.pyplot as plt
img=cv2.imread("photo1.jpg",0)
print(img.shape)
rows,cols=img.shape[:]
data=img.reshape((rows*cols,1))
data=np.float32(data)
criteria=(cv2.TERM_CPRITERIA_EPS +cv2.TERM_CPRITERIA_MAX_TER,10,1.0)
flags=cv2.KMEAS_RANDOM_CENTERS
compactness,labels,centers=cv2.kmeans(data,4,None,criteria,10,flags)
dst=labels.reshape((img.shape[0],img.shape[1]))
plt.rcParams['font.sans-serif']=['SimHei']
titles=[u'原始图像',u'聚类图像']
image=[img,dst]
for i in range(2):
    plt.subplot(1,2,i+1),plt.imshow(images[i],'gray'),plt.title(titles[i])
    plt.xticks([]),plt.yticks([])
plt.show()

#SIFT
import cv2
import numpy as np
img = cv2.imread('photo1.jpg')
result3 = img.copy()
src = np.float32([[107, 231], [147, 287], [327, 61], [83, 431]])
dst = np.float32([[0, 0], [400, 0], [0, 500], [400, 500]])
print(img.shape)
m = cv2.getPerspectiveTransform(src, dst)
print("warpMatrix:")
print(m)
result = cv2.warpPerspective(result3, m, (400, 500))
cv2.imshow("src", img)
cv2.imshow("result", result)
cv2.waitKey(0)















